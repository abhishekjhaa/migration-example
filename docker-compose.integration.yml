version: '3.8'

services:
  postgres-integration:
    image: postgres:15-alpine
    container_name: order-management-postgres-integration
    environment:
      POSTGRES_DB: order_management_integration
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5

  order-service-integration:
    build:
      context: .
      dockerfile: ./services/order-service/Dockerfile.integration
      args:
        BUILDKIT_INLINE_CACHE: 1
    container_name: order-service-integration
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres-integration:5432/order_management_integration
      PORT: 3001
      NODE_ENV: test
    ports:
      - "3003:3001"
    depends_on:
      postgres-integration:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  invoice-service-integration:
    build:
      context: .
      dockerfile: ./services/invoice-service/Dockerfile.integration
      args:
        BUILDKIT_INLINE_CACHE: 1
    container_name: invoice-service-integration
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres-integration:5432/order_management_integration
      ORDER_SERVICE_URL: http://order-service-integration:3001
      PORT: 3002
      NODE_ENV: test
    ports:
      - "3002:3002"
    depends_on:
      postgres-integration:
        condition: service_healthy
      order-service-integration:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3002/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
